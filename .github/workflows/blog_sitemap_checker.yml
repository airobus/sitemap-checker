# 工作流的名称
name: Blog Sitemap Checker

on:
  # 定时触发
  schedule:
    - cron: '0 4 * * *'
  
  # 手动触发
  workflow_dispatch:
    # 新增: 定义手动触发时的输入参数
    inputs:
      sitemap_url:
        description: '要单独检查的个人博客的Sitemap网址 (可选)'
        required: false
        default: ''

# 定义工作任务
jobs:
  check-sitemap:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 步骤 1: 检出代码
      - name: Check out repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 步骤 3: 安装依赖库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      # 步骤 4: 运行 Python 脚本
      - name: Run sitemap checker script
        env:
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
          # 新增: 将手动输入的URL作为环境变量传递给脚本
          MANUAL_SITEMAP_URL: ${{ github.event.inputs.sitemap_url }}
        run: python blog_sitemap_checker.py

      # 步骤 5: 提交并推送文件变更
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 修改git add命令以匹配动态生成的文件名
          git add ./*-urls.txt ./*-new_urls.txt
          if ! git diff --staged --quiet; then
            git commit -m "chore: 自动更新 sitemap URL 列表"
            git push
          else
            echo "文件无变化，无需提交。"
          fi
